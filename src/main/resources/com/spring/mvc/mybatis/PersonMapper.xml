<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace에는 인터페이스 풀 네임(패키지+인터페이스 이름 -->
<mapper namespace="com.spring.mvc.mybatis.PersonMapper">

<!--   SQL 작성 : 추상메서드 별로 작성 -->
<!-- id에는 추상메서드 이름을 적습니다.-->
    <insert id="save">
        INSERT INTO Person
         (person_name, person_age)
        VALUES (#{personName}, #{personAge})
    </insert>

    <update id="change">
        UPDATE person
        SET person_name = #{personName}, person_age = #{personAge}
        WHERE id = #{id}
    </update>
<!--   파라미터값이면 파라미터 변수 이름을 적으면 된다. -->
    <delete id="remove">
        DELETE FROM person
        WHERE id = #{id}
    </delete>

<!--   ORM : 자바객체 필드랑 테이블 컬럼을 매핑 -->
<!--   type은 패키지명+Entity 다 적어주자 id는 마음대로 -->
<!--  DB 테이블 컬럼과 자바 엔티티 맴버와 같으면 자동으로 넣어줌 -->
    <resultMap id="person" type="com.spring.mvc.jdbc.Person">
<!--        자바에선 요롷게 불리는데 DB컬럼은 이렇게 불린단다! -->
        <result property="personName" column="person_name"/>
        <result property="personAge" column="person_age"/>
    </resultMap>

<!--   여러줄 나오면 List로 던져줌 resultMap만 명시하자 -->
    <select id="findAll" resultMap="person">
        SELECT * FROM person
    </select>
<!--    하나만 던지면 한개만 자동으로 나옴-->
    <select id="findOne" resultMap="person">
        SELECT * FROM person
        WHERE id = #{id}
    </select>
</mapper>